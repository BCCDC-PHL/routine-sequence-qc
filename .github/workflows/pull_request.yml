on:
  pull_request:
    branches:
    - main
name: Pull Request
jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: create artifacts dir to save test logs
      run: mkdir artifacts
    - name: Cache Miniconda installation
      id: cache-miniconda
      uses: actions/cache@v2
      env:
        cache-name: cache-miniconda-installation
      with:
        path: /opt/miniconda3
        key: ${{ runner.os }}-build-${{ env.cache-name }}-miniconda3
    - name: Cache conda environment
      id: cache-conda-env
      uses: actions/cache@v2
      env:
        cache-name: cache-conda-env
      with:
        path: ~/.conda/envs
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('environments') }}
    - name: Cache Kraken2/Bracken DB
      id: cache-kraken2-db
      uses: actions/cache@v2
      env:
        cache-name: cache-krakan2-db
      with:
        path: $PWD/.github/data/kraken2_db
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('.github/data/ref_genome_list.txt') }}
    - name: Install Miniconda
      if: steps.cache-miniconda.outputs.cache-hit != 'true'
      run: bash .github/scripts/install_conda.sh
    - name: Install Nextflow
      run: bash .github/scripts/install_nextflow.sh
    - name: Install ncbi-acc-download
      run: |
       export PATH=/opt/miniconda3/bin:$PATH
       conda install -y ncbi-acc-download
    - name: Install kraken2 & bracken
      run: |
       export PATH=/opt/miniconda3/bin:$PATH
       conda install -y kraken2 bracken
    - name: Install ART Read Simulator
      run: bash .github/scripts/install_art.sh
    - name: Download Reference Genomes
      run: bash .github/scripts/download_reference_genomes.sh ./github/data/ref_genome_list.txt
    - name: Create Kraken2 DB
      run: bash .github/scripts/create_kraken2_db.sh
    - name: Create Bracken DB
      run: bash .github/scripts/create_bracken_db.sh
    - name: Download Example InterOp data
      run: bash .github/scripts/download_example_interop_data.sh
    - name: Generate Simulated Reads
      run: bash .github/scripts/generate_simulated_reads.sh
    - name: Test against previous release
      run: bash .github/scripts/test_against_previous_release.sh
    - name: if failure, add latest NF log to artifacts
      run: mv .nextflow.log artifacts/failure.nextflow.log && mv work artifacts/work_failed
      if: failure()
    - uses: actions/upload-artifact@v1
      if: always()
      with:
        name: test_artifacts
        path: artifacts
